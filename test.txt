Write a script that interacts with at least two functions on the 
UniswapV2 Router contract excluding the ones used in class. 
Take a screenshot of your interaction logs in your terminal and put 
it inside a folder you will create named screenshot in your project directory.
*


Write a contract that uses a pseudorandom generator to play ludo. Basically, 
implement a simple version of the ludo map and also focus mainly on the 
dice throwing algorithm. There is no strict design to this. 
You can use any design method you want.



async function main() {
	const ROUTER_ADDRESS = "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D";
	const USDC = "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48";
	const DAI = "0x6B175474E89094C44Da98b954EedeAC495271d0F";
	const WETH = "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2";

	const TOKEN_HOLDER = "0xf584F8728B874a6a5c7A8d4d387C9aae9172D621";

	await helpers.impersonateAccount(TOKEN_HOLDER);
	const impersonatedSigner = await ethers.getSigner(TOKEN_HOLDER);

	const amountOut = ethers.parseUnits("1", 18);
	const amountInMax = ethers.parseUnits("3000", 6);

	const USDC_Contract = await ethers.getContractAt(
		"IERC20",
		USDC,
		impersonatedSigner
	);

	const WETH_Contract = await ethers.getContractAt(
		"IERC20",
		WETH,
		impersonatedSigner
	);

	const ROUTER = await ethers.getContractAt(
		"IUniswapV2Router",
		ROUTER_ADDRESS,
		impersonatedSigner
	);
	const approveTx = await USDC_Contract.approve(ROUTER_ADDRESS, amountInMax);
	await approveTx.wait();

	const deadline2 = Math.floor(Date.now() / 1000) + 60 * 10;

	// const WETHBalBefore = await WETH_Contract.balanceOf(TOKEN_HOLDER);
	// console.log({ WETHBalBefore });

	const ETHERSBALANCEBEFORESWAP = await ethers.provider.getBalance(
		TOKEN_HOLDER
	);
	console.log({
		ETHERSBALANCEBEFORESWAP: ethers.formatUnits(
			ETHERSBALANCEBEFORESWAP.toString(),
			18
		),
	});
	const txReceipt = await ROUTER.swapTokensForExactETH(
		amountOut,
		amountInMax,
		[USDC, WETH],
		TOKEN_HOLDER,
		deadline2
	);
	await txReceipt.wait();

	const ETHERSBALANCEAFTERSWAP = await ethers.provider.getBalance(TOKEN_HOLDER);
	console.log({
		ETHERSBALANCEAFTERSWAP: ethers.formatUnits(
			ETHERSBALANCEAFTERSWAP.toString(),
			18
		),
	});

	
}


git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin git@github.com:NikkyXO/interactionWeb3.git
git push -u origin main
